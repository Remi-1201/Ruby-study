# 02 ----------------------------------------

arr = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
].transpose

p arr

# = [[1, 4, 7], [2, 5, 8], [3, 6, 9]]

# 03 ----------------------------------------

arr = [1,2].zip([3,4])
p arr
# => [[1, 3], [2, 4]]

arr = [1,2,3].zip([3,4])
p arr
# => [[1, 3], [2, 4], [3, nil]]

arr = [[1, 2], [3, 4]].zip([5, 6])
p arr
# => [[[1, 2], 5], [[3, 4], 6]]

# 04 ----------------------------------------

arr1 = Array(3){"a"}
p arr1
# => [3]
# {"a"}は無視される

arr2 = Array.new(3){"a"}
p arr2
# => ["a", "a", "a"]

p arr2[0].object_id
p arr2[1].object_id
p arr2[2].object_id
# => 異なるIDになっている

arr3 = Array.new(3, "a")
p arr3
# => ["a", "a", "a"]

p arr3[0].object_id
p arr3[1].object_id
p arr3[2].object_id
# => 同じIDになっている

arr2.first.upcase!
p arr2
# => ["A", "a", "a"]

arr3.first.upcase!
p arr3
# => ["A", "A", "A"]

# 05 ----------------------------------------

a = [1, 2, 3, 4]
p a.slice(2, 1)
# => [3]

p a.slice(0, 2)
# => [1, 2]

p a[2, 1]
# => [3]

p a[0, 2]
# => [1, 2]

str = "1234"
p str.slice(2, 1)
# => "3"

p str.slice(0, 2)
# => "12"

p str[2, 1]
# => "3"

p str[0, 2]
# => "12"

# 06 ----------------------------------------

a1 = [1,2,3]
a2 = [4,2,3]

p a1 | a2
# => [1, 2, 3, 4]

p a1.concat a2
# => [1, 2, 3, 4, 2, 3]

p a1
# => [1, 2, 3, 4, 2, 3]
# concatは破壊的な変更
