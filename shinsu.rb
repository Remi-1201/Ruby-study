"""
1/ (n)進数から10進数へ変換
String#to_iは引数に--基数(0と2~36の整数)--を指定することができ、
10進数以外の--文字列も--数値に変換--することができる。
"""

p "11111111".to_i(2) #=> 255
p "377".to_i(8) #=> 255
p "255".to_i(10) #=> 255
p "FF".to_i(16) #=> 255

"""
2/ 文字列の先頭に0bや0xなど基数を表す接頭子が付いている場合は、
KernelのIntegerを使うことで文字列を数値に変換することができる。
"""

p Integer("0b11111111") #=> 255
p Integer("0377") #=> 255
p Integer("255") #=> 255
p Integer("0xFF") #=> 255

"""
3/ 逆に---数値を文字列に--変換する場合
(---10進数から(n)進数へ変換---)---は--Integer#to_s--を使う。
こちらもString#to_iと同様に---引数に基数(0と2~36の整数)を指定---することができる。
"""

p 255.to_s(2) #=> "11111111"
p 255.to_s(8) #=> "377"
p 255.to_s(10) #=> "255"
p 255.to_s(16) #=> "ff"

"""
4/ 0bや0xなど接頭子が付いた文字列が必要な場合は、
kernelのsprintfを使うのが簡単だ。
以下のようにして2進、8進数、10進数、16進数の文字列を得る。
"""

p sprintf("%#b", 255) #=> "0b11111111"
p sprintf("%#o", 255) #=> "0377"
p sprintf("%#d", 255) #=> "255"
p sprintf("%#x", 255) #=> "0xff"

"""
5/ sprintfはString#%として書くこともできる。
"""

p "%#b" % 255 #=> "0b11111111"
p "%#o" % 255 #=> "0377"
p "%#d" % 255 #=> "255"
p "%#x" % 255 #=> "0xff"

"""
6/ String#%はsprintfなので複数の引数を取ることもできる。 
"""

p "%#b %#o %#d %#x" % [2, 4, 8, 16] #=> "0b10 04 8 0x10"

"""
7/ 引数に0を指定した場合変換対象の接頭辞から基数を判断します。
"""

# 2進数
"0b10".to_i(0) # => 2

# 8進数
"010".to_i(0)  # => 8
"0o10".to_i(0) # => 8

# 10進数
"0d10".to_i(0) # => 10

# 16進数
"0x10".to_i(0) # => 16

"""
8/ 空文字、nilが変換対象の場合は0を返します。
"""

nil.to_i # => 0

"""
9/ 8進数を１０進数に　=> oct
１６進数を１０進数に => hex
"""
"377".oct  # => 255
"ff".hex  # => 255